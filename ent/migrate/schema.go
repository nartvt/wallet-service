// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CurrencyRatesColumns holds the columns for the "currency_rates" table.
	CurrencyRatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "symbol", Type: field.TypeString},
		{Name: "rate", Type: field.TypeString},
		{Name: "expired_at", Type: field.TypeTime, Nullable: true},
	}
	// CurrencyRatesTable holds the schema information for the "currency_rates" table.
	CurrencyRatesTable = &schema.Table{
		Name:       "currency_rates",
		Columns:    CurrencyRatesColumns,
		PrimaryKey: []*schema.Column{CurrencyRatesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "currencyrate_symbol",
				Unique:  false,
				Columns: []*schema.Column{CurrencyRatesColumns[3]},
			},
		},
	}
	// IcosColumns holds the columns for the "icos" table.
	IcosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "round_id", Type: field.TypeInt32},
		{Name: "round_name", Type: field.TypeString},
		{Name: "price", Type: field.TypeString},
		{Name: "num_token", Type: field.TypeString},
		{Name: "num_sub", Type: field.TypeInt32},
		{Name: "price_gap", Type: field.TypeString},
		{Name: "ended_at", Type: field.TypeTime, Nullable: true},
	}
	// IcosTable holds the schema information for the "icos" table.
	IcosTable = &schema.Table{
		Name:       "icos",
		Columns:    IcosColumns,
		PrimaryKey: []*schema.Column{IcosColumns[0]},
	}
	// IcoCouponsColumns holds the columns for the "ico_coupons" table.
	IcoCouponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeString},
		{Name: "coupon", Type: field.TypeString},
		{Name: "reward", Type: field.TypeString},
		{Name: "cashback", Type: field.TypeString},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// IcoCouponsTable holds the schema information for the "ico_coupons" table.
	IcoCouponsTable = &schema.Table{
		Name:       "ico_coupons",
		Columns:    IcoCouponsColumns,
		PrimaryKey: []*schema.Column{IcoCouponsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "icocoupon_coupon",
				Unique:  true,
				Columns: []*schema.Column{IcoCouponsColumns[4]},
			},
		},
	}
	// IcoHistoriesColumns holds the columns for the "ico_histories" table.
	IcoHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "round_id", Type: field.TypeInt32},
		{Name: "user_id", Type: field.TypeString},
		{Name: "price", Type: field.TypeString},
		{Name: "num_token", Type: field.TypeString},
		{Name: "sub_round", Type: field.TypeInt32},
		{Name: "type", Type: field.TypeString, Nullable: true},
	}
	// IcoHistoriesTable holds the schema information for the "ico_histories" table.
	IcoHistoriesTable = &schema.Table{
		Name:       "ico_histories",
		Columns:    IcoHistoriesColumns,
		PrimaryKey: []*schema.Column{IcoHistoriesColumns[0]},
	}
	// IcoRoundsColumns holds the columns for the "ico_rounds" table.
	IcoRoundsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "round_id", Type: field.TypeInt32},
		{Name: "sub_round", Type: field.TypeInt32},
		{Name: "price", Type: field.TypeString},
		{Name: "num_token", Type: field.TypeString},
		{Name: "bought_token", Type: field.TypeString},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "is_close", Type: field.TypeBool, Default: false},
	}
	// IcoRoundsTable holds the schema information for the "ico_rounds" table.
	IcoRoundsTable = &schema.Table{
		Name:       "ico_rounds",
		Columns:    IcoRoundsColumns,
		PrimaryKey: []*schema.Column{IcoRoundsColumns[0]},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "trans_type", Type: field.TypeString},
		{Name: "source", Type: field.TypeString},
		{Name: "src_symbol", Type: field.TypeString},
		{Name: "src_amount", Type: field.TypeString},
		{Name: "destination", Type: field.TypeString},
		{Name: "dest_symbol", Type: field.TypeString},
		{Name: "dest_amount", Type: field.TypeString},
		{Name: "rate", Type: field.TypeString},
		{Name: "source_service", Type: field.TypeString},
		{Name: "source_id", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
	}
	// UserWalletsColumns holds the columns for the "user_wallets" table.
	UserWalletsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "symbol", Type: field.TypeString},
		{Name: "is_active", Type: field.TypeBool},
		{Name: "balance", Type: field.TypeString, SchemaType: map[string]string{"postgres": "numeric"}},
	}
	// UserWalletsTable holds the schema information for the "user_wallets" table.
	UserWalletsTable = &schema.Table{
		Name:       "user_wallets",
		Columns:    UserWalletsColumns,
		PrimaryKey: []*schema.Column{UserWalletsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "userwallet_user_id_symbol_type",
				Unique:  true,
				Columns: []*schema.Column{UserWalletsColumns[3], UserWalletsColumns[5], UserWalletsColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CurrencyRatesTable,
		IcosTable,
		IcoCouponsTable,
		IcoHistoriesTable,
		IcoRoundsTable,
		TransactionsTable,
		UserWalletsTable,
	}
)

func init() {
}
