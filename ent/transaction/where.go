// Code generated by ent, DO NOT EDIT.

package transaction

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/indikay/wallet-service/ent/predicate"
	"github.com/rs/xid"
)

// ID filters vertices based on their ID field.
func ID(id xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id xid.ID) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldUpdatedAt, v))
}

// TransType applies equality check predicate on the "trans_type" field. It's identical to TransTypeEQ.
func TransType(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldTransType, v))
}

// Source applies equality check predicate on the "source" field. It's identical to SourceEQ.
func Source(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSource, v))
}

// SrcSymbol applies equality check predicate on the "src_symbol" field. It's identical to SrcSymbolEQ.
func SrcSymbol(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSrcSymbol, v))
}

// SrcAmount applies equality check predicate on the "src_amount" field. It's identical to SrcAmountEQ.
func SrcAmount(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSrcAmount, v))
}

// Destination applies equality check predicate on the "destination" field. It's identical to DestinationEQ.
func Destination(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldDestination, v))
}

// DestSymbol applies equality check predicate on the "dest_symbol" field. It's identical to DestSymbolEQ.
func DestSymbol(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldDestSymbol, v))
}

// DestAmount applies equality check predicate on the "dest_amount" field. It's identical to DestAmountEQ.
func DestAmount(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldDestAmount, v))
}

// Rate applies equality check predicate on the "rate" field. It's identical to RateEQ.
func Rate(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldRate, v))
}

// SourceService applies equality check predicate on the "source_service" field. It's identical to SourceServiceEQ.
func SourceService(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSourceService, v))
}

// SourceID applies equality check predicate on the "source_id" field. It's identical to SourceIDEQ.
func SourceID(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSourceID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldUpdatedAt, v))
}

// TransTypeEQ applies the EQ predicate on the "trans_type" field.
func TransTypeEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldTransType, v))
}

// TransTypeNEQ applies the NEQ predicate on the "trans_type" field.
func TransTypeNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldTransType, v))
}

// TransTypeIn applies the In predicate on the "trans_type" field.
func TransTypeIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldTransType, vs...))
}

// TransTypeNotIn applies the NotIn predicate on the "trans_type" field.
func TransTypeNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldTransType, vs...))
}

// TransTypeGT applies the GT predicate on the "trans_type" field.
func TransTypeGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldTransType, v))
}

// TransTypeGTE applies the GTE predicate on the "trans_type" field.
func TransTypeGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldTransType, v))
}

// TransTypeLT applies the LT predicate on the "trans_type" field.
func TransTypeLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldTransType, v))
}

// TransTypeLTE applies the LTE predicate on the "trans_type" field.
func TransTypeLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldTransType, v))
}

// TransTypeContains applies the Contains predicate on the "trans_type" field.
func TransTypeContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldTransType, v))
}

// TransTypeHasPrefix applies the HasPrefix predicate on the "trans_type" field.
func TransTypeHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldTransType, v))
}

// TransTypeHasSuffix applies the HasSuffix predicate on the "trans_type" field.
func TransTypeHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldTransType, v))
}

// TransTypeEqualFold applies the EqualFold predicate on the "trans_type" field.
func TransTypeEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldTransType, v))
}

// TransTypeContainsFold applies the ContainsFold predicate on the "trans_type" field.
func TransTypeContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldTransType, v))
}

// SourceEQ applies the EQ predicate on the "source" field.
func SourceEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSource, v))
}

// SourceNEQ applies the NEQ predicate on the "source" field.
func SourceNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldSource, v))
}

// SourceIn applies the In predicate on the "source" field.
func SourceIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldSource, vs...))
}

// SourceNotIn applies the NotIn predicate on the "source" field.
func SourceNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldSource, vs...))
}

// SourceGT applies the GT predicate on the "source" field.
func SourceGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldSource, v))
}

// SourceGTE applies the GTE predicate on the "source" field.
func SourceGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldSource, v))
}

// SourceLT applies the LT predicate on the "source" field.
func SourceLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldSource, v))
}

// SourceLTE applies the LTE predicate on the "source" field.
func SourceLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldSource, v))
}

// SourceContains applies the Contains predicate on the "source" field.
func SourceContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldSource, v))
}

// SourceHasPrefix applies the HasPrefix predicate on the "source" field.
func SourceHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldSource, v))
}

// SourceHasSuffix applies the HasSuffix predicate on the "source" field.
func SourceHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldSource, v))
}

// SourceEqualFold applies the EqualFold predicate on the "source" field.
func SourceEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldSource, v))
}

// SourceContainsFold applies the ContainsFold predicate on the "source" field.
func SourceContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldSource, v))
}

// SrcSymbolEQ applies the EQ predicate on the "src_symbol" field.
func SrcSymbolEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSrcSymbol, v))
}

// SrcSymbolNEQ applies the NEQ predicate on the "src_symbol" field.
func SrcSymbolNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldSrcSymbol, v))
}

// SrcSymbolIn applies the In predicate on the "src_symbol" field.
func SrcSymbolIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldSrcSymbol, vs...))
}

// SrcSymbolNotIn applies the NotIn predicate on the "src_symbol" field.
func SrcSymbolNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldSrcSymbol, vs...))
}

// SrcSymbolGT applies the GT predicate on the "src_symbol" field.
func SrcSymbolGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldSrcSymbol, v))
}

// SrcSymbolGTE applies the GTE predicate on the "src_symbol" field.
func SrcSymbolGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldSrcSymbol, v))
}

// SrcSymbolLT applies the LT predicate on the "src_symbol" field.
func SrcSymbolLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldSrcSymbol, v))
}

// SrcSymbolLTE applies the LTE predicate on the "src_symbol" field.
func SrcSymbolLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldSrcSymbol, v))
}

// SrcSymbolContains applies the Contains predicate on the "src_symbol" field.
func SrcSymbolContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldSrcSymbol, v))
}

// SrcSymbolHasPrefix applies the HasPrefix predicate on the "src_symbol" field.
func SrcSymbolHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldSrcSymbol, v))
}

// SrcSymbolHasSuffix applies the HasSuffix predicate on the "src_symbol" field.
func SrcSymbolHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldSrcSymbol, v))
}

// SrcSymbolEqualFold applies the EqualFold predicate on the "src_symbol" field.
func SrcSymbolEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldSrcSymbol, v))
}

// SrcSymbolContainsFold applies the ContainsFold predicate on the "src_symbol" field.
func SrcSymbolContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldSrcSymbol, v))
}

// SrcAmountEQ applies the EQ predicate on the "src_amount" field.
func SrcAmountEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSrcAmount, v))
}

// SrcAmountNEQ applies the NEQ predicate on the "src_amount" field.
func SrcAmountNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldSrcAmount, v))
}

// SrcAmountIn applies the In predicate on the "src_amount" field.
func SrcAmountIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldSrcAmount, vs...))
}

// SrcAmountNotIn applies the NotIn predicate on the "src_amount" field.
func SrcAmountNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldSrcAmount, vs...))
}

// SrcAmountGT applies the GT predicate on the "src_amount" field.
func SrcAmountGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldSrcAmount, v))
}

// SrcAmountGTE applies the GTE predicate on the "src_amount" field.
func SrcAmountGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldSrcAmount, v))
}

// SrcAmountLT applies the LT predicate on the "src_amount" field.
func SrcAmountLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldSrcAmount, v))
}

// SrcAmountLTE applies the LTE predicate on the "src_amount" field.
func SrcAmountLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldSrcAmount, v))
}

// SrcAmountContains applies the Contains predicate on the "src_amount" field.
func SrcAmountContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldSrcAmount, v))
}

// SrcAmountHasPrefix applies the HasPrefix predicate on the "src_amount" field.
func SrcAmountHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldSrcAmount, v))
}

// SrcAmountHasSuffix applies the HasSuffix predicate on the "src_amount" field.
func SrcAmountHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldSrcAmount, v))
}

// SrcAmountEqualFold applies the EqualFold predicate on the "src_amount" field.
func SrcAmountEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldSrcAmount, v))
}

// SrcAmountContainsFold applies the ContainsFold predicate on the "src_amount" field.
func SrcAmountContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldSrcAmount, v))
}

// DestinationEQ applies the EQ predicate on the "destination" field.
func DestinationEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldDestination, v))
}

// DestinationNEQ applies the NEQ predicate on the "destination" field.
func DestinationNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldDestination, v))
}

// DestinationIn applies the In predicate on the "destination" field.
func DestinationIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldDestination, vs...))
}

// DestinationNotIn applies the NotIn predicate on the "destination" field.
func DestinationNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldDestination, vs...))
}

// DestinationGT applies the GT predicate on the "destination" field.
func DestinationGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldDestination, v))
}

// DestinationGTE applies the GTE predicate on the "destination" field.
func DestinationGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldDestination, v))
}

// DestinationLT applies the LT predicate on the "destination" field.
func DestinationLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldDestination, v))
}

// DestinationLTE applies the LTE predicate on the "destination" field.
func DestinationLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldDestination, v))
}

// DestinationContains applies the Contains predicate on the "destination" field.
func DestinationContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldDestination, v))
}

// DestinationHasPrefix applies the HasPrefix predicate on the "destination" field.
func DestinationHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldDestination, v))
}

// DestinationHasSuffix applies the HasSuffix predicate on the "destination" field.
func DestinationHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldDestination, v))
}

// DestinationEqualFold applies the EqualFold predicate on the "destination" field.
func DestinationEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldDestination, v))
}

// DestinationContainsFold applies the ContainsFold predicate on the "destination" field.
func DestinationContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldDestination, v))
}

// DestSymbolEQ applies the EQ predicate on the "dest_symbol" field.
func DestSymbolEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldDestSymbol, v))
}

// DestSymbolNEQ applies the NEQ predicate on the "dest_symbol" field.
func DestSymbolNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldDestSymbol, v))
}

// DestSymbolIn applies the In predicate on the "dest_symbol" field.
func DestSymbolIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldDestSymbol, vs...))
}

// DestSymbolNotIn applies the NotIn predicate on the "dest_symbol" field.
func DestSymbolNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldDestSymbol, vs...))
}

// DestSymbolGT applies the GT predicate on the "dest_symbol" field.
func DestSymbolGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldDestSymbol, v))
}

// DestSymbolGTE applies the GTE predicate on the "dest_symbol" field.
func DestSymbolGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldDestSymbol, v))
}

// DestSymbolLT applies the LT predicate on the "dest_symbol" field.
func DestSymbolLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldDestSymbol, v))
}

// DestSymbolLTE applies the LTE predicate on the "dest_symbol" field.
func DestSymbolLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldDestSymbol, v))
}

// DestSymbolContains applies the Contains predicate on the "dest_symbol" field.
func DestSymbolContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldDestSymbol, v))
}

// DestSymbolHasPrefix applies the HasPrefix predicate on the "dest_symbol" field.
func DestSymbolHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldDestSymbol, v))
}

// DestSymbolHasSuffix applies the HasSuffix predicate on the "dest_symbol" field.
func DestSymbolHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldDestSymbol, v))
}

// DestSymbolEqualFold applies the EqualFold predicate on the "dest_symbol" field.
func DestSymbolEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldDestSymbol, v))
}

// DestSymbolContainsFold applies the ContainsFold predicate on the "dest_symbol" field.
func DestSymbolContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldDestSymbol, v))
}

// DestAmountEQ applies the EQ predicate on the "dest_amount" field.
func DestAmountEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldDestAmount, v))
}

// DestAmountNEQ applies the NEQ predicate on the "dest_amount" field.
func DestAmountNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldDestAmount, v))
}

// DestAmountIn applies the In predicate on the "dest_amount" field.
func DestAmountIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldDestAmount, vs...))
}

// DestAmountNotIn applies the NotIn predicate on the "dest_amount" field.
func DestAmountNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldDestAmount, vs...))
}

// DestAmountGT applies the GT predicate on the "dest_amount" field.
func DestAmountGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldDestAmount, v))
}

// DestAmountGTE applies the GTE predicate on the "dest_amount" field.
func DestAmountGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldDestAmount, v))
}

// DestAmountLT applies the LT predicate on the "dest_amount" field.
func DestAmountLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldDestAmount, v))
}

// DestAmountLTE applies the LTE predicate on the "dest_amount" field.
func DestAmountLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldDestAmount, v))
}

// DestAmountContains applies the Contains predicate on the "dest_amount" field.
func DestAmountContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldDestAmount, v))
}

// DestAmountHasPrefix applies the HasPrefix predicate on the "dest_amount" field.
func DestAmountHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldDestAmount, v))
}

// DestAmountHasSuffix applies the HasSuffix predicate on the "dest_amount" field.
func DestAmountHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldDestAmount, v))
}

// DestAmountEqualFold applies the EqualFold predicate on the "dest_amount" field.
func DestAmountEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldDestAmount, v))
}

// DestAmountContainsFold applies the ContainsFold predicate on the "dest_amount" field.
func DestAmountContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldDestAmount, v))
}

// RateEQ applies the EQ predicate on the "rate" field.
func RateEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldRate, v))
}

// RateNEQ applies the NEQ predicate on the "rate" field.
func RateNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldRate, v))
}

// RateIn applies the In predicate on the "rate" field.
func RateIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldRate, vs...))
}

// RateNotIn applies the NotIn predicate on the "rate" field.
func RateNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldRate, vs...))
}

// RateGT applies the GT predicate on the "rate" field.
func RateGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldRate, v))
}

// RateGTE applies the GTE predicate on the "rate" field.
func RateGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldRate, v))
}

// RateLT applies the LT predicate on the "rate" field.
func RateLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldRate, v))
}

// RateLTE applies the LTE predicate on the "rate" field.
func RateLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldRate, v))
}

// RateContains applies the Contains predicate on the "rate" field.
func RateContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldRate, v))
}

// RateHasPrefix applies the HasPrefix predicate on the "rate" field.
func RateHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldRate, v))
}

// RateHasSuffix applies the HasSuffix predicate on the "rate" field.
func RateHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldRate, v))
}

// RateEqualFold applies the EqualFold predicate on the "rate" field.
func RateEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldRate, v))
}

// RateContainsFold applies the ContainsFold predicate on the "rate" field.
func RateContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldRate, v))
}

// SourceServiceEQ applies the EQ predicate on the "source_service" field.
func SourceServiceEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSourceService, v))
}

// SourceServiceNEQ applies the NEQ predicate on the "source_service" field.
func SourceServiceNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldSourceService, v))
}

// SourceServiceIn applies the In predicate on the "source_service" field.
func SourceServiceIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldSourceService, vs...))
}

// SourceServiceNotIn applies the NotIn predicate on the "source_service" field.
func SourceServiceNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldSourceService, vs...))
}

// SourceServiceGT applies the GT predicate on the "source_service" field.
func SourceServiceGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldSourceService, v))
}

// SourceServiceGTE applies the GTE predicate on the "source_service" field.
func SourceServiceGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldSourceService, v))
}

// SourceServiceLT applies the LT predicate on the "source_service" field.
func SourceServiceLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldSourceService, v))
}

// SourceServiceLTE applies the LTE predicate on the "source_service" field.
func SourceServiceLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldSourceService, v))
}

// SourceServiceContains applies the Contains predicate on the "source_service" field.
func SourceServiceContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldSourceService, v))
}

// SourceServiceHasPrefix applies the HasPrefix predicate on the "source_service" field.
func SourceServiceHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldSourceService, v))
}

// SourceServiceHasSuffix applies the HasSuffix predicate on the "source_service" field.
func SourceServiceHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldSourceService, v))
}

// SourceServiceEqualFold applies the EqualFold predicate on the "source_service" field.
func SourceServiceEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldSourceService, v))
}

// SourceServiceContainsFold applies the ContainsFold predicate on the "source_service" field.
func SourceServiceContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldSourceService, v))
}

// SourceIDEQ applies the EQ predicate on the "source_id" field.
func SourceIDEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldSourceID, v))
}

// SourceIDNEQ applies the NEQ predicate on the "source_id" field.
func SourceIDNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldSourceID, v))
}

// SourceIDIn applies the In predicate on the "source_id" field.
func SourceIDIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldSourceID, vs...))
}

// SourceIDNotIn applies the NotIn predicate on the "source_id" field.
func SourceIDNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldSourceID, vs...))
}

// SourceIDGT applies the GT predicate on the "source_id" field.
func SourceIDGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldSourceID, v))
}

// SourceIDGTE applies the GTE predicate on the "source_id" field.
func SourceIDGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldSourceID, v))
}

// SourceIDLT applies the LT predicate on the "source_id" field.
func SourceIDLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldSourceID, v))
}

// SourceIDLTE applies the LTE predicate on the "source_id" field.
func SourceIDLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldSourceID, v))
}

// SourceIDContains applies the Contains predicate on the "source_id" field.
func SourceIDContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldSourceID, v))
}

// SourceIDHasPrefix applies the HasPrefix predicate on the "source_id" field.
func SourceIDHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldSourceID, v))
}

// SourceIDHasSuffix applies the HasSuffix predicate on the "source_id" field.
func SourceIDHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldSourceID, v))
}

// SourceIDEqualFold applies the EqualFold predicate on the "source_id" field.
func SourceIDEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldSourceID, v))
}

// SourceIDContainsFold applies the ContainsFold predicate on the "source_id" field.
func SourceIDContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldSourceID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...string) predicate.Transaction {
	return predicate.Transaction(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "status" field.
func StatusContains(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "status" field.
func StatusHasPrefix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "status" field.
func StatusHasSuffix(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "status" field.
func StatusEqualFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "status" field.
func StatusContainsFold(v string) predicate.Transaction {
	return predicate.Transaction(sql.FieldContainsFold(FieldStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Transaction) predicate.Transaction {
	return predicate.Transaction(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Transaction) predicate.Transaction {
	return predicate.Transaction(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Transaction) predicate.Transaction {
	return predicate.Transaction(sql.NotPredicates(p))
}
